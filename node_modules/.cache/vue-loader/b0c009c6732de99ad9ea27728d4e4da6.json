{"remainingRequest":"/Users/melihsunbul/WebstormProjects/ma_conf/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/melihsunbul/WebstormProjects/ma_conf/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/melihsunbul/WebstormProjects/ma_conf/src/App.vue","mtime":1624357632636},{"path":"/Users/melihsunbul/WebstormProjects/ma_conf/node_modules/css-loader/dist/cjs.js","mtime":1624353941098},{"path":"/Users/melihsunbul/WebstormProjects/ma_conf/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1624353943862},{"path":"/Users/melihsunbul/WebstormProjects/ma_conf/node_modules/postcss-loader/src/index.js","mtime":1624353943517},{"path":"/Users/melihsunbul/WebstormProjects/ma_conf/node_modules/cache-loader/dist/cjs.js","mtime":1599814540757},{"path":"/Users/melihsunbul/WebstormProjects/ma_conf/node_modules/vue-loader/lib/index.js","mtime":1624353943862}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNpbnB1dCB7CnRleHQtYWxpZ246IGNlbnRlcgp9CiNncmFtIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwp9CmxpIHsKICBsaXN0LXN0eWxlLXR5cGU6bm9uZTsKCn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div>\n        <div id=\"input\">\n            <h3>Set Description</h3>\n            <input ref=\"getInput\" type=\"text\">\n            <button @click=\"getInput\">\n                Send\n            </button>\n        </div>\n        <div id=\"gram\">\n            <div>\n                <h4>1-gram</h4>\n                <li v-for=\"word in firstGram\" :key=\"word\">\n                    {{ word }}\n                </li>\n            </div>\n            <div>\n                <h4>2-gram</h4>\n                <li v-for=\"word in secondGram\" :key=\"word\">\n                    {{ word }}\n                </li>\n            </div>\n            <div>\n                <h4>3-gram</h4>\n                <li v-for=\"word in thirdGram\" :key=\"word\">\n                    {{ word }}\n                </li>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name: 'app',\n        data(){\n            return {\n                plainDesc: '',\n                firstGram: [],\n                secondGram: [],\n                thirdGram: [],\n            };\n        },\n        methods: {\n            createKeywords(){\n                this.firstGram = this.plainDesc.split(' ');\n                this.firstGram = this.firstGram.map(word => word.toLowerCase());\n                for (let i = 0; i<this.firstGram.length; i++){\n                    let twoWords = '';\n                    let threeWords = '';\n                    if (i + 1 <= this.firstGram.length) {\n                        twoWords = this.firstGram[i] + ' ' + this.firstGram[i+1];\n                    }\n                    if (i + 1 <= this.firstGram.length || i + 2 <= this.firstGram.length) {\n                        threeWords = this.firstGram[i] + ' ' + this.firstGram[i+1] + ' ' + this.firstGram[i+2];\n                    }\n                    this.secondGram.push(twoWords);\n                    this.thirdGram.push(threeWords);\n\n                }\n                this.removeDuplicates(this.firstGram);\n                this.removeDuplicates(this.secondGram);\n                this.removeDuplicates(this.thirdGram);\n\n            },\n            getInput(){\n                const regex = /[!â€¢\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n                this.plainDesc = this.$refs.getInput.value.replace(regex, '');\n                this.createKeywords();\n            },\n            removeDuplicates(arr){\n                return [...new Set(arr)];\n            },\n        },\n    };\n</script>\n\n<style>\n#input {\ntext-align: center\n}\n#gram {\n  display: flex;\n  justify-content: space-around;\n}\nli {\n  list-style-type:none;\n\n}\n</style>\n"]}]}